{"version":3,"sources":["TodoForm.js","TodoList.js","MeteorDiagram.js","useTodoState.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","saveTodo","useState","value","setValue","onSubmit","event","preventDefault","TextField","variant","placeholder","margin","onChange","target","TodoList","todos","deleteTodo","toggleComplete","List","map","todo","index","ListItem","dense","button","Checkbox","tabIndex","disableRipple","onClick","ListItemText","primary","eventTitle","secondary","Intl","DateTimeFormat","format","startDate","priority","ListItemSecondaryAction","IconButton","aria-label","toString","window","innerWidth","innerHeight","width","height","MeteorDiagram","props","createMeteorDiagram","bind","this","svg","node","select","selectAll","remove","nodes","filter","d","isComplete","radius","Object","create","simulation","d3","force","strength","Math","log","max","a","b","utc1","Date","UTC","getFullYear","getMonth","getDate","utc2","floor","dateDiffInDays","append","attr","data","join","style","label","enter","text","on","x","y","ref","Component","useTodos","initialValue","setTodos","addTodo","todoText","match","length","todoData","Sherlock","parse","time","getTime","todoIndex","newTodos","_","t","App","useTodoState","JSON","localStorage","getItem","useEffect","setItem","stringify","className","Typography","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89a084fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst TodoForm = ({ saveTodo }) => {\n  const [value, setValue] = useState('');\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        saveTodo(value);\n        setValue('');\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        placeholder=\"Add todo\"\n        margin=\"normal\"\n        onChange={(event) => {\n          setValue(event.target.value);\n        }}\n        value={value}\n      />\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst TodoList = ({ todos, deleteTodo, toggleComplete }) => (\n  <List>\n    {todos.map((todo, index) => (\n      <ListItem key={index.toString()} dense button>\n        <Checkbox tabIndex={-1} disableRipple onClick={() => {toggleComplete(index)}} />\n        <ListItemText primary={todo.eventTitle} secondary={new Intl.DateTimeFormat('en-US').format(todo.startDate) + \" | P\" + todo.priority} />\n        <ListItemSecondaryAction>\n          <IconButton\n            aria-label=\"Delete\"\n            onClick={() => {\n              deleteTodo(index);\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    ))}\n  </List>\n);\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport * as d3 from \"d3\";\nimport { select } from \"d3-selection\";\n\nconst [width, height] = [window.innerWidth / 2, window.innerHeight];\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nconst EARTH_HEIGHT = 50;\n\n// a and b are javascript Date objects\nfunction dateDiffInDays(a, b) {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n}\n\nclass MeteorDiagram extends Component {\n  constructor(props) {\n    super(props);\n    this.createMeteorDiagram = this.createMeteorDiagram.bind(this);\n  }\n  componentDidMount() {\n    this.createMeteorDiagram();\n  }\n  componentDidUpdate() {\n    this.createMeteorDiagram();\n  }\n\n  createMeteorDiagram() {\n    const svg = this.node;\n    select(svg).selectAll(\"*\").remove();\n    const nodes = this.props.todos\n      .filter((d) => !d.isComplete)\n      .map((d) => {\n        return { ...d, radius: d.priority * 20 };\n      })\n      .map((d) => Object.create(d));\n\n    const simulation = d3\n      .forceSimulation(nodes)\n      .force(\"charge\", d3.forceManyBody().strength(-80))\n      .force(\"x\", d3.forceX(width / 2).strength(0.03))\n      .force(\n        \"y\",\n        d3.forceY(\n          (d) =>\n            (5 * height) / 6 -\n            (height / 6) *\n              Math.log(Math.max(dateDiffInDays(new Date(), d.startDate), 0.8))\n        )\n      )\n      .force(\n        \"collide\",\n        d3.forceCollide().radius((d) => d.radius)\n      );\n\n    const node = select(svg)\n      .append(\"g\")\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"fill\", \"bisque\")\n      .selectAll(\"circle\")\n      .data(nodes)\n      .join(\"circle\")\n      .attr(\"r\", (d) => d.radius);\n\n    select(svg)\n      .append(\"circle\")\n      .attr(\"cx\", \"50%\")\n      .attr(\"cy\", height + (width / 2) - EARTH_HEIGHT)\n      .attr(\"r\", width / 2)\n      .style(\"fill\", \"green\");\n\n    const label = select(svg)\n      .selectAll(\".mytext\")\n      .data(nodes)\n      .enter()\n      .append(\"text\")\n      .text(function (d) {\n        return d.eventTitle;\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#0e0\")\n      .style(\"font-family\", \"Arial\")\n      .style(\"font-size\", 14);\n\n    simulation.on(\"tick\", () => {\n      /*\n    link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n    */\n\n      node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n\n      label\n        .attr(\"x\", function (d) {\n          return d.x;\n        })\n        .attr(\"y\", function (d) {\n          return d.y - d.radius - 10;\n        });\n    });\n  }\n  render() {\n    return (\n      <svg\n        ref={(node) => (this.node = node)}\n        width=\"50%\"\n        height=\"100%\"\n      ></svg>\n    );\n  }\n}\nexport default MeteorDiagram;\n","import { useState } from \"react\";\nimport Sherlock from 'sherlockjs';\n\nconst useTodos = (initialValue) => {\n  const [todos, setTodos] = useState(initialValue);\n\n  return {\n    todos,\n    addTodo: (todoText) => {\n      const priority = (todoText.match(/!/g) || []).length + 1;\n      const todoData = Sherlock.parse(todoText);\n      todoData.isComplete = false;\n      todoData.priority = priority;\n      todoData.startDate = todoData.startDate || new Date();\n      todoData.time = todoData.startDate.getTime();\n      setTodos([...todos, todoData]);\n    },\n    deleteTodo: (todoIndex) => {\n      const newTodos = todos.filter((_, index) => index !== todoIndex);\n\n      setTodos(newTodos);\n    },\n    toggleComplete: (todoIndex) => {\n      const newTodos = todos.map((t, index) => index !== todoIndex ? t : {...t, isComplete: !t.isComplete});\n      // TODO Get sorting working \n      // .sort((a, b) => a.isComplete - b.isComplete);\n      setTodos(newTodos);\n    }\n  };\n};\n\nexport default useTodos;\n","import React, {useEffect} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport MeteorDiagram from './MeteorDiagram';\nimport useTodoState from './useTodoState';\nimport './App.css';\n\nconst App = () => {\n  const initTodos = () => { \n    let todos = JSON.parse(window.localStorage.getItem('todos')) || [];\n    return todos.map((t) => { \n      const time = new Date(t.time);\n      return {...t, startDate: time};\n    });\n  };\n  const { todos, addTodo, deleteTodo, toggleComplete } = useTodoState(initTodos);\n\n  useEffect(() => {\n    window.localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"App-sidebar\">\n        <Typography component=\"h1\" variant=\"h2\">\n          Todos\n        </Typography>\n\n        <TodoForm\n          saveTodo={addTodo}\n        />\n\n        <TodoList todos={todos} deleteTodo={deleteTodo} toggleComplete={toggleComplete} />\n      </div>\n      <MeteorDiagram todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}